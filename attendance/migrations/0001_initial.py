# Generated by Django 5.2.3 on 2025-08-13 00:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("code", models.CharField(max_length=10, verbose_name="code")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "department",
                "verbose_name_plural": "departments",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "industry",
                    models.CharField(
                        choices=[
                            ("IT", "Information Technology"),
                            ("EDU", "Education"),
                            ("FIN", "Finance"),
                            ("HLTH", "Healthcare"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                        verbose_name="industry",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("small", "Small (1-50 employees)"),
                            ("medium", "Medium (51-200 employees)"),
                            ("large", "Large (201+ employees)"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="size",
                    ),
                ),
                ("address", models.TextField(verbose_name="address")),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="logos/", verbose_name="logo"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "organization",
                "verbose_name_plural": "organizations",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=30, verbose_name="last name"),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("STAFF", "Staff"),
                            ("HOD", "Head of Department"),
                            ("MANAGER", "Manager"),
                            ("ADMIN", "Administrator"),
                            ("DIRECTOR", "Director/CEO"),
                        ],
                        default="STAFF",
                        max_length=20,
                        verbose_name="position",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="phone number"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pics/",
                        verbose_name="profile picture",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verified"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="staff status"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="last login IP"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="attendance.department",
                        verbose_name="department",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="attendance.organization",
                        verbose_name="organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="AIFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="message")),
                (
                    "is_positive",
                    models.BooleanField(
                        help_text="Was the feedback positive?",
                        verbose_name="is positive",
                    ),
                ),
                (
                    "feedback_text",
                    models.TextField(blank=True, verbose_name="feedback text"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_feedbacks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI feedback",
                "verbose_name_plural": "AI feedbacks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="content")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("MOTIVATION", "Motivational Quote"),
                            ("JOKE", "Funny Joke"),
                            ("TIP", "Productivity Tip"),
                        ],
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("SYSTEM", "System Generated"),
                            ("OPENAI", "OpenAI API"),
                            ("USER", "User Provided"),
                        ],
                        default="SYSTEM",
                        max_length=20,
                        verbose_name="source",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI message",
                "verbose_name_plural": "AI messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily Report"),
                            ("WEEKLY", "Weekly Report"),
                            ("MONTHLY", "Monthly Report"),
                            ("CUSTOM", "Custom Date Range"),
                        ],
                        max_length=10,
                        verbose_name="report type",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="start date")),
                ("end_date", models.DateField(verbose_name="end date")),
                (
                    "record_count",
                    models.PositiveIntegerField(default=0, verbose_name="record count"),
                ),
                (
                    "generated_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="generated at"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="reports/", verbose_name="file"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="parameters"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "attendance report",
                "verbose_name_plural": "attendance reports",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="FaceProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "face_encoding",
                    models.BinaryField(
                        blank=True,
                        help_text="Facial recognition data",
                        null=True,
                        verbose_name="face encoding",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="High-quality frontal face image",
                        upload_to="face_profiles/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            )
                        ],
                        verbose_name="image",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this face profile should be treated as active",
                        verbose_name="active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last used"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="face_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "face profile",
                "verbose_name_plural": "face profiles",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.AddField(
            model_name="department",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="departments",
                to="attendance.organization",
                verbose_name="organization",
            ),
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="phone number",
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="address"),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "emergency_contact",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="emergency contact",
                    ),
                ),
                (
                    "emergency_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="emergency phone",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="position"
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(blank=True, null=True, verbose_name="hire date"),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pics/",
                        verbose_name="profile picture",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "profile",
                "verbose_name_plural": "profiles",
            },
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="date"
                    ),
                ),
                ("time_in", models.TimeField(verbose_name="time in")),
                (
                    "time_out",
                    models.TimeField(blank=True, null=True, verbose_name="time out"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PRESENT", "Present"),
                            ("LATE", "Late"),
                            ("ABSENT", "Absent"),
                            ("ON_LEAVE", "On Leave"),
                        ],
                        default="PRESENT",
                        max_length=10,
                        verbose_name="status",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("FACE", "Face Recognition"),
                            ("MANUAL", "Manual Entry"),
                        ],
                        default="FACE",
                        max_length=10,
                        verbose_name="method",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="location"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "attendance",
                "verbose_name_plural": "attendances",
                "ordering": ["-date", "-time_in"],
                "unique_together": {("user", "date")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="department",
            unique_together={("organization", "name")},
        ),
    ]
